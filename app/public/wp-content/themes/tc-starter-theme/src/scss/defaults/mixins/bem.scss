$bem-element: '__' !default;
$bem-modifier: '--' !default;
$-bem-block-name: '' !default;
$-bem-element-name: '';

@mixin -bem-check-wrapper {
  @if $-bem-block-name == '' {
    @error 'You must wrap this mixin inside block mixin wrapper';
  }
}
@mixin block($block-name) {
  $-bem-block-name: '.#{$block-name}' !global;

  .#{$block-name} {
    @content;
  }
  $-bem-block-name: '' !global;
}
@mixin element($element-name) {
  $element-name: #{$bem-element}#{$element-name};
  $-bem-element-name: $element-name !global;

  @include -bem-check-wrapper;

  @if str-index(inspect(&), ':') {
    & #{$-bem-block-name}#{$element-name} {
      @content;
    }
  } @else if str-index(inspect(&), $bem-modifier) {
    & #{$-bem-block-name}#{$element-name} {
      @content;
    }
  } @else if str-index(inspect(&), $bem-element) {
    & #{$-bem-block-name}#{$element-name} {
      @error 'You should use pseudo-class selectors like :hover, :focus etc. to nest element mixins';
      @content;
    }
  } @else {
    @at-root &#{$element-name} {
      @content;
    }
  }
  $-bem-element-name: '' !global;
}
@mixin modifier($modifier-name) {
  $modifier-name: #{$bem-modifier}#{$modifier-name};
  @include -bem-check-wrapper;

  @if str-index(inspect(&), ':hover') {
    $length: length(str-explode(inspect(&), ' '));

    @if $length >= 2 {
      @at-root &#{$modifier-name} {
        $parent: &;
        @content;
      }
    } @else {
      $element-name: nth(str-replace(nth(str-explode(inspect(&), ':'), 1), '(', ''), 1);

      &#{$element-name}#{$modifier-name} {
        @content;
      }
    }
  } @else {
    &#{$modifier-name} {
      @content;
    }
  }
}